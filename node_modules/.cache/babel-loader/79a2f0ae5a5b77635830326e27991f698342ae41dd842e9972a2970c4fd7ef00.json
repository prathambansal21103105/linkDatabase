{"ast":null,"code":"var _jsxFileName = \"/Users/prathambansal/Desktop/database/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport MoviesList from './components/MoviesList';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  // const fetchMovieHandler=()=>{\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then(response=>{\n  //       return response.json();\n  //     }).then(data=>{\n  //       const transformedMovies=data.results.map((movieData)=>{\n  //         return{\n  //           id:movieData.episode_id,\n  //           title:movieData.title,\n  //           openingText:movieData.opening_crawl,\n  //           releaseDate:movieData.release_date\n  //         }\n  //       });\n  //       setMovies(transformedMovies);\n  //     });\n  // }\n  const fetchMovieHandler = async () => {\n    setIsLoading(true);\n    const response = await fetch('https://swapi.dev/api/films/');\n    const data = await response.json();\n    const transformedMovies = data.results.map(movieData => {\n      return {\n        id: movieData.episode_id,\n        title: movieData.title,\n        openingText: movieData.opening_crawl,\n        releaseDate: movieData.release_date\n      };\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchMovieHandler,\n        children: \"Fetch Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [!isLoading && movies.length > 0 && /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: movies\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this), !isLoading && movies.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Found no movies.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 45\n      }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Mhgugv26A3Tqk+sOa/Pb1BFgsCM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","MoviesList","jsxDEV","_jsxDEV","App","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovieHandler","response","fetch","data","json","transformedMovies","results","map","movieData","id","episode_id","title","openingText","opening_crawl","releaseDate","release_date","Fragment","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/prathambansal/Desktop/database/src/App.js"],"sourcesContent":["import React,{ useState } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport './App.css';\n\nfunction App() {\n  const [movies,setMovies]=useState([]);\n  const [isLoading,setIsLoading]=useState(false);\n  const [error,setError]=useState(null);\n  // const fetchMovieHandler=()=>{\n  //   fetch('https://swapi.dev/api/films/')\n  //     .then(response=>{\n  //       return response.json();\n  //     }).then(data=>{\n  //       const transformedMovies=data.results.map((movieData)=>{\n  //         return{\n  //           id:movieData.episode_id,\n  //           title:movieData.title,\n  //           openingText:movieData.opening_crawl,\n  //           releaseDate:movieData.release_date\n  //         }\n  //       });\n  //       setMovies(transformedMovies);\n  //     });\n  // }\n  const fetchMovieHandler=async()=>{\n    setIsLoading(true);\n    const response=await fetch('https://swapi.dev/api/films/')\n    const data=await response.json();\n    const transformedMovies=data.results.map((movieData)=>{\n      return{\n        id:movieData.episode_id,\n        title:movieData.title,\n        openingText:movieData.opening_crawl,\n        releaseDate:movieData.release_date\n      }\n    });\n    setMovies(transformedMovies);\n    setIsLoading(false);\n  }\n\n\n  return (\n    <React.Fragment>\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && movies.length>0 && <MoviesList movies={movies} />}\n        {!isLoading && movies.length===0 && <p>Found no movies.</p>}\n        {isLoading && <p>Loading...</p>}\n      </section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAQ,OAAO;AAEtC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAACC,SAAS,CAAC,GAACP,QAAQ,CAAC,EAAE,CAAC;EACrC,MAAM,CAACQ,SAAS,EAACC,YAAY,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,IAAI,CAAC;EACrC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMY,iBAAiB,GAAC,MAAAA,CAAA,KAAS;IAC/BH,YAAY,CAAC,IAAI,CAAC;IAClB,MAAMI,QAAQ,GAAC,MAAMC,KAAK,CAAC,8BAA8B,CAAC;IAC1D,MAAMC,IAAI,GAAC,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;IAChC,MAAMC,iBAAiB,GAACF,IAAI,CAACG,OAAO,CAACC,GAAG,CAAEC,SAAS,IAAG;MACpD,OAAM;QACJC,EAAE,EAACD,SAAS,CAACE,UAAU;QACvBC,KAAK,EAACH,SAAS,CAACG,KAAK;QACrBC,WAAW,EAACJ,SAAS,CAACK,aAAa;QACnCC,WAAW,EAACN,SAAS,CAACO;MACxB,CAAC;IACH,CAAC,CAAC;IACFpB,SAAS,CAACU,iBAAiB,CAAC;IAC5BR,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAGD,oBACEN,OAAA,CAACJ,KAAK,CAAC6B,QAAQ;IAAAC,QAAA,gBACb1B,OAAA;MAAA0B,QAAA,eACE1B,OAAA;QAAQ2B,OAAO,EAAElB,iBAAkB;QAAAiB,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACV/B,OAAA;MAAA0B,QAAA,GACG,CAACrB,SAAS,IAAIF,MAAM,CAAC6B,MAAM,GAAC,CAAC,iBAAIhC,OAAA,CAACF,UAAU;QAACK,MAAM,EAAEA;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC/D,CAAC1B,SAAS,IAAIF,MAAM,CAAC6B,MAAM,KAAG,CAAC,iBAAIhC,OAAA;QAAA0B,QAAA,EAAG;MAAgB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAC1D1B,SAAS,iBAAIL,OAAA;QAAA0B,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAErB;AAAC7B,EAAA,CAjDQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAmDZ,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}